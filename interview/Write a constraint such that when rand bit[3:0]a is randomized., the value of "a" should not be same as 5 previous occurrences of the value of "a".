class sample;

  rand bit [3:0]a;
  bit [3:0]q[$];

  constraint a_c{ (q.size()!=5)->!(a inside {q});}

	function void post_randomize();

		q.push_back(a);
		$display("Val_A= %p",a);
		$display("Val_Q= %p",q);
      //if(q.size()==5)
		//	q.delete();

	endfunction
endclass
module top;
	sample s=new();
	initial begin
      repeat(10)
	begin
      assert(s.randomize());
	end
	end
endmodule
//=============================================================
// 			Results
//=============================================================
# Val_A= 3
# Val_Q= '{3}
# Val_A= 13
# Val_Q= '{3, 13}
# Val_A= 9
# Val_Q= '{3, 13, 9}
# Val_A= 0
# Val_Q= '{3, 13, 9, 0}
# Val_A= 4
# Val_Q= '{3, 13, 9, 0, 4}
# Val_A= 10
# Val_Q= '{3, 13, 9, 0, 4, 10}
# Val_A= 14
# Val_Q= '{3, 13, 9, 0, 4, 10, 14}
# Val_A= 6
# Val_Q= '{3, 13, 9, 0, 4, 10, 14, 6}
# Val_A= 11
# Val_Q= '{3, 13, 9, 0, 4, 10, 14, 6, 11}
# Val_A= 15
# Val_Q= '{3, 13, 9, 0, 4, 10, 14, 6, 11, 15}
